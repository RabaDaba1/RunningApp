// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RunningApp.Data;

#nullable disable

namespace RunningApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240529065319_Added_records")]
    partial class Added_records
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("RunningApp.Models.Athlete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Athletes");
                });

            modelBuilder.Entity("RunningApp.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Distance")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("RunningApp.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Results");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 1,
                            Time = new TimeSpan(0, 0, 25, 30, 0),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            EventId = 1,
                            Time = new TimeSpan(0, 0, 24, 10, 0),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            EventId = 2,
                            Time = new TimeSpan(0, 0, 30, 45, 0),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            EventId = 2,
                            Time = new TimeSpan(0, 0, 27, 15, 0),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            EventId = 3,
                            Time = new TimeSpan(0, 0, 29, 50, 0),
                            UserId = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
